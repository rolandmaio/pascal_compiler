methods = ["actual_parameter",
"actual_parameter_list",
"adding_operator",
"apostrophe_image",
"array_type",
"array_variable",
"assignment_statement",
"base_type",
"block",
"Boolean_expression",
"bound_identifier",
"buffer_variable",
"case_constant",
"case_constant_list",
"case_index",
"case_list_element",
"case_statement",
"character_string",
"component_type",
"component_variable",
"compound_statement",
"conditional_statement",
"conformant_array_parameter_specification",
"conformant_array_schema",
"constant",
"constant_definition",
"constant_definition_part",
"constant_identifier",
"control_variable",
"digit",
"digit_sequence",
"directive",
"domain_type",
"else_part",
"empty_statement",
"entire_variable",
"enumerated_type",
"expression",
"factor",
"field_designator",
"field_designator_identifier",
"field_identifier",
"field_list",
"field_specififer",
"file_type",
"file_variable",
"final_value",
"fixed_part",
"for_statement",
"formal_parameter_list",
"formal_parameter_section",
"fractional_part",
"function_block",
"function_declaration",
"function_designator",
"function_heading",
"function_identification",
"function_identifier",
"functional_parameter_specification",
"goto_statement",
"identified_variable",
"identifier",
"identifier_list",
"if_statement",
"index_expression",
"index_type",
"index_type_specification",
"indexed_variable",
"initial_value",
"label",
"label_declaration_part",
"letter",
"member_designator",
"multiplying_operator",
"new_ordinal_type",
"new_pointer_type",
"new_structured_type",
"new_type",
"ordinal_type",
"ordinal_type_identifier",
"packed_conformant_array_schema",
"pointer_type",
"procedural_parameter_specification",
"procedure_and_function_declaration_part",
"procedure_block",
"procedure_declaration",
"procedure_heading",
"procedure_identification",
"procedure_identifier",
"procedure_statement",
"program",
"program_block",
"program_heading",
"program_parameter_list",
"read_parameter_list",
"readln_parameter_list",
"real_type_identifier",
"record_section",
"record_type",
"record_variable",
"record_variable_list",
"relational_operator",
"repeat_statement",
"repetitive_statement",
"result_type",
"scale_factor",
"set_constructor",
"set_type",
"sign",
"signed_integer",
"signed_number",
"signed_real",
"simple_expression",
"simple_statement",
"simple_type",
"simple_type_identifier",
"special_symbol",
"statement",
"statement_part",
"statement_sequence",
"string_character",
"string_element",
"structured_element",
"structured_type",
"structured_type_identifier",
"subrange_type",
"tag_field",
"tag_type",
"term",
"type_definition",
"type_definition_part",
"type_denoter",
"type_identifier",
"unpacked_conformant_array_schema",
"unpacked_structured_type",
"unsigned_constant",
"unsigned_integer",
"unsigned_number",
"unsigned_real",
"value_conformant_array_specification",
"value_parameter_specification",
"variable_access",
"variable_conformant_array_specification",
"variable_declaration",
"variable_declaration_part",
"variable_identifier",
"variable_parameter_specification",
"variant",
"variant_part",
"variant_selector",
"while_statement",
"with_statement",
"word_symbol",
"write_parameter_list",
"writeln_parameter_list"]

for method in methods:
    print("void {method}(){{\n    parseTreeLogger.logEntry(\"{method}\");\n    throw NotImplementedError(\"{method}\");\n    parseTreeLogger.logExit(\"{method}\");\n}}\n".format(method=method))
